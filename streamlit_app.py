import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
import os

st.set_page_config(layout="wide")

st.title("MNIST Digit Generator with CGAN")

st.write("Select a digit from the dropdown below and click 'Generate' to see images generated by the Conditional GAN.")

# Dropdown for selecting a digit
digit_to_generate = st.selectbox(
    "Choose a digit:",
    options=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
)

# Use Markdown with HTML/CSS for the button
button_html = """
<style>
.custom-button {
  background-color: #4CAF50; /* Green */
  border: none;
  color: white;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  margin: 4px 2px;
  cursor: pointer;
  border-radius: 8px;
}

.custom-button:hover {
  background-color: #45a049;
}
</style>
"""

st.markdown(button_html, unsafe_allow_html=True)

# To make the button actually trigger the Streamlit logic, you need a hidden Streamlit button
# This hidden button is what the HTML button will "click" using JavaScript
generate_button_clicked = st.button("Generate", key="generate-button", help="Click to generate images")

if generate_button_clicked:
    st.subheader(f"You selected to generate digit {digit_to_generate}:")

    # You can add placeholder content here while the model is training
    st.write("Model is currently training. Generated images will appear here after training is complete and the model is loaded.")

    # You could optionally display some placeholder images or text
    # For example:
    # col1, col2, col3, col4, col5 = st.columns(5)
    # for i in range(5):
    #     with cols[i]:
    #         st.write(f"Placeholder {i+1}")